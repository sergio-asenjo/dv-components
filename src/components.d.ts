/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface DvDrawer {
        "drawerHeader": string;
        "open": boolean;
        "toggleDrawer": () => Promise<void>;
    }
    interface DvSpinner {
    }
    interface DvStockFinder {
    }
    interface DvStockPrice {
        "error": boolean;
    }
    interface DvTooltip {
        "message": string;
        "shown": boolean;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
}
export interface DvStockFinderCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLDvStockFinderElement;
}
declare global {
    interface HTMLDvDrawerElement extends Components.DvDrawer, HTMLStencilElement {
    }
    var HTMLDvDrawerElement: {
        prototype: HTMLDvDrawerElement;
        new (): HTMLDvDrawerElement;
    };
    interface HTMLDvSpinnerElement extends Components.DvSpinner, HTMLStencilElement {
    }
    var HTMLDvSpinnerElement: {
        prototype: HTMLDvSpinnerElement;
        new (): HTMLDvSpinnerElement;
    };
    interface HTMLDvStockFinderElement extends Components.DvStockFinder, HTMLStencilElement {
    }
    var HTMLDvStockFinderElement: {
        prototype: HTMLDvStockFinderElement;
        new (): HTMLDvStockFinderElement;
    };
    interface HTMLDvStockPriceElement extends Components.DvStockPrice, HTMLStencilElement {
    }
    var HTMLDvStockPriceElement: {
        prototype: HTMLDvStockPriceElement;
        new (): HTMLDvStockPriceElement;
    };
    interface HTMLDvTooltipElement extends Components.DvTooltip, HTMLStencilElement {
    }
    var HTMLDvTooltipElement: {
        prototype: HTMLDvTooltipElement;
        new (): HTMLDvTooltipElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLElementTagNameMap {
        "dv-drawer": HTMLDvDrawerElement;
        "dv-spinner": HTMLDvSpinnerElement;
        "dv-stock-finder": HTMLDvStockFinderElement;
        "dv-stock-price": HTMLDvStockPriceElement;
        "dv-tooltip": HTMLDvTooltipElement;
        "my-component": HTMLMyComponentElement;
    }
}
declare namespace LocalJSX {
    interface DvDrawer {
        "drawerHeader"?: string;
        "open"?: boolean;
    }
    interface DvSpinner {
    }
    interface DvStockFinder {
        "onDvSymbolSelected"?: (event: DvStockFinderCustomEvent<string>) => void;
    }
    interface DvStockPrice {
        "error"?: boolean;
    }
    interface DvTooltip {
        "message"?: string;
        "shown"?: boolean;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface IntrinsicElements {
        "dv-drawer": DvDrawer;
        "dv-spinner": DvSpinner;
        "dv-stock-finder": DvStockFinder;
        "dv-stock-price": DvStockPrice;
        "dv-tooltip": DvTooltip;
        "my-component": MyComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "dv-drawer": LocalJSX.DvDrawer & JSXBase.HTMLAttributes<HTMLDvDrawerElement>;
            "dv-spinner": LocalJSX.DvSpinner & JSXBase.HTMLAttributes<HTMLDvSpinnerElement>;
            "dv-stock-finder": LocalJSX.DvStockFinder & JSXBase.HTMLAttributes<HTMLDvStockFinderElement>;
            "dv-stock-price": LocalJSX.DvStockPrice & JSXBase.HTMLAttributes<HTMLDvStockPriceElement>;
            "dv-tooltip": LocalJSX.DvTooltip & JSXBase.HTMLAttributes<HTMLDvTooltipElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
        }
    }
}
